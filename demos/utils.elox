fun abs(x) {
    if (x > 0) {
        return x;
    }

    return -x;
}

fun pow(a, exponent) {
    if (exponent == 0) return 1;

    var p = a;
    for (var i = 1; i < exponent; i = i + 1) {
        p = p * a;
    }

    return p;
}

fun time(fn) {
    var t1 = clock();
    fn();
    return (clock() - t1) * 1000; //ms
}

class PRNG {
  init(seed) {
    this.a = 25214903917;
    this.c = 11;
    this.m = 281474976710656;
    this.seed = seed;
  }

  next() {
    this.seed = (this.a * this.seed + this.c) % this.m;
    return this.seed / this.m;
  }
}

class Point {
  init(x, y) {
    this.x = x;
    this.y = y;
  }

  distSq(to) {
    return pow(to.x - this.x, 2) + pow(to.y - this.y, 2);
  }
}

fun computePi(iters) {
  var rand = PRNG(clock() * 1000);
  var inside_circle = 0;
  var center = Point(0, 0);

  for (var i = 0; i < iters; i = i + 1) {
    var p = Point(
      (rand.next() * 2) - 1,
      (rand.next() * 2) - 1
    );

    if (p.distSq(center) < 1) {
      inside_circle = inside_circle + 1; 
    }
  }

  return (inside_circle / iters) * 4;
}

fun main() {
  var pi;

  fun calc_pi() {
    pi = computePi(100000);
  }

  var took = time(calc_pi);

  print "pi ~ " + pi + " took " + took + " ms";
}

main();